<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.edu.oms.dao.AdministratorMapper">
  <resultMap id="BaseResultMap" type="com.neu.edu.oms.entity.Administrator">
    <constructor>
      <idArg column="administrator_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phonenum" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="college" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reserve1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reserve2" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    administrator_id, name, phonenum, email, password, type, college, reserve1, reserve2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from administrator
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from administrator
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.edu.oms.entity.Administrator">
    insert into administrator (administrator_id, name, phonenum, 
      email, password, type, 
      college, reserve1, reserve2
      )
    values (#{administratorId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{college,jdbcType=VARCHAR}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neu.edu.oms.entity.Administrator">
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        administrator_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phonenum != null">
        phonenum,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        #{administratorId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.edu.oms.entity.Administrator">
    update administrator
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phonenum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.edu.oms.entity.Administrator">
    update administrator
    set name = #{name,jdbcType=VARCHAR},
      phonenum = #{phonenum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      college = #{college,jdbcType=VARCHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </update>
</mapper>